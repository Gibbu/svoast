<script>
	import Usage from './examples/_usage.svelte';
	import Types from './examples/_types.svelte';
	import Options from './examples/_options.svelte';
</script>

# Installation

Install using your favourite package manager:

```
npm i svoast -D
```

```
yarn add svoast -D
```

```
pnpm add svoast -D
```

---

# Usage

Import the `<Toasts />` component to your main layout file.

```svelte
<!-- routes/+layout.svelte -->
<script>
	import { Toasts } from 'svoast';
</script>

<Toasts />
```

And then call the `toast` function anywhere! (on the client, of course)

```svelte
<!-- routes/settings/+page.svelte -->
<script>
	import { toast } from 'svoast';

	async function save() {
		const { success } = await api.user.save();

		if (success) {
			toast.success('Settings successfully updated.');
		} else {
			toast.error('There was a problem trying to save your settings.', { duration: 12000 });
		}
	}
</script>

<button on:click={save}>Save changes</button>
```

<Usage />

---

# Types

You have 5 types to toasts to play with.

Info, attention, success, warning, and error.  
These _should_ be enough to express to the user what they mean.

<Types />

---

# Options

There are 2 options that you can pass; `closable` and `duration`.

`closable` will allow the user to dismiss the toast early.  
`duration` well, will be the time the toast is visible.

<Options />

---

# Styling

SVoast uses CSS variables.

```css
:root {
	/* The toast itself. */
	--svoast-bg: #333;
	--svoast-text: #fff;
	--svoast-padding: 10px 15px 10px 18px;
	--svoast-radius: 4px;
	--svoast-shadow: 0 2px 7px hsl(0 0% 0% / 0.25);
	--svoast-font-size: 14px;
	--svoast-dismiss-gap: 8px;
	--svoast-max-width: unset;

	/* The current colour of the toast, depending on the type. */
	--svoast-colour: '';

	/* The coloured bar */
	--svoast-bar-width: 3px;

	/* Icons */
	--svoast-icon-padding: 2px;
}
```